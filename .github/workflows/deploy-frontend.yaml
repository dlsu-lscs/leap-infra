---
name: Deploy Frontend

on:
  repository_dispatch:
    types: [frontend-update]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout infrastructure
        uses: actions/checkout@v4

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: "v1.32.2"

      - name: Set up Kustomize
        uses: imranismail/setup-kustomize@v2
        with:
          kustomize-version: "5.6.0"

      - name: Configure kubectl
        uses: azure/k8s-set-context@v3
        with:
          kubeconfig: ${{ secrets.KUBE_CONFIG }}

      - name: Determine environment
        id: env
        run: |
          if [ "${{ github.event.client_payload.branch }}" == "main" ]; then
            echo "name=production" >> $GITHUB_OUTPUT
            echo "prefix=" >> $GITHUB_OUTPUT
          else
            echo "name=staging" >> $GITHUB_OUTPUT
            echo "prefix=staging-" >> $GITHUB_OUTPUT
          fi
          echo "Environment: ${{ steps.env.outputs.name }}"
          echo "Prefix: ${{ steps.env.outputs.prefix }}"

      - name: Update frontend image reference
        run: |
          echo "Updating frontend image reference for ${{ steps.env.outputs.name }} to ${{ github.event.client_payload.image }}"
          cd overlays/${{ steps.env.outputs.name }}/frontend
          kustomize edit set image ghcr.io/dlsu-lscs/leap25-frontend=${{ github.event.client_payload.image }}
          cd ../../../

      - name: Deploy frontend application
        timeout-minutes: 10
        run: |
          echo "Deploying frontend to ${{ steps.env.outputs.name }} environment"

          # apply updated frontend deployment with HPAs
          kubectl apply -k overlays/${{ steps.env.outputs.name }}/frontend
          kubectl apply -k overlays/${{ steps.env.outputs.name }}/hpa/frontend-hpa.yaml

          echo "Waiting for deployment rollout..."
          kubectl rollout status deployment/${{ steps.env.outputs.prefix }}leap25-frontend --timeout=300s

          # verify HPA is running properly
          echo "Checking HPA status..."
          kubectl get hpa ${{ steps.env.outputs.prefix }}leap25-frontend-hpa

          echo "Frontend deployment completed successfully"

      - name: Notify deployment success
        if: success()
        run: |
          echo "Frontend deployment to ${{ steps.env.outputs.name }} completed successfully"
          echo "Environment: ${{ steps.env.outputs.name }}"
          echo "Image: ${{ github.event.client_payload.image }}"
          # add notification integration (Slack, Teams, etc.)

      - name: Notify deployment failure
        if: failure()
        run: |
          echo "Frontend deployment to ${{ steps.env.outputs.name }} failed"
          echo "Environment: ${{ steps.env.outputs.name }}"
          echo "Image: ${{ github.event.client_payload.image }}"
          # add notification integration (Slack, Teams, etc.)

      - name: Verify frontend deployment health
        run: |
          echo "Verifying frontend deployment health..."
          # Create a test pod to verify frontend is serving correctly
          cat <<EOF | kubectl apply -f -
          apiVersion: v1
          kind: Pod
          metadata:
            name: frontend-healthcheck
            namespace: default
            labels:
              app: frontend-healthcheck
          spec:
            containers:
            - name: curl
              image: curlimages/curl:7.88.1
              command: ["sleep", "300"]
            restartPolicy: Never
          EOF

          # Wait for the pod to be ready
          kubectl wait --for=condition=ready pod/frontend-healthcheck --timeout=60s

          # Use the pod to test the frontend service
          kubectl exec frontend-healthcheck -- curl -s -o /dev/null -w "%{http_code}" http://${{ steps.env.outputs.prefix }}leap25-frontend.default.svc.cluster.local:80/ | grep -q "200\|301\|302"

          if [ $? -eq 0 ]; then
            echo "✅ Frontend is healthy and responding with success status"
          else
            echo "❌ Frontend health check failed"
            # Get more diagnostic information
            kubectl exec frontend-healthcheck -- curl -v http://${{ steps.env.outputs.prefix }}leap25-frontend.default.svc.cluster.local:80/
            exit 1
          fi

          # Clean up test pod
          kubectl delete pod frontend-healthcheck
